var fs = require('fs');

function MIME_parts(self) {
    var parts = self.MIME_parts;

    // additional attachment : computed file with headers and footers
    my $hf_content = $self->_header_footer;
    unshift @parts, ["files/header_footer.htm", $hf_content] if $hf_content;
    
    return @parts;
}

/*
 * @constructor
 */
function MsOfficeWordHTMLWriter(options) {
    var options = options || {};

    this.head         = options.head       || "";
    this.hf_head      = options.hf_head    || "";
    this.title        = options.title      || "Document generated by MsOfficeWordHTMLWriter";
    this.sections     = options.sections   || [];
    this.MIME_parts   = options.MIME_parts || [];
    this.WordDocument = options.WordDocument;
}

MsOfficeWordHTMLWriter.prototype = {
    create_section: function() {

    },

    write: function() {

    },

    save_as: function() {

    },

    field: function() {

    },

    attach: function(callback) {

    },

    page_break: function(pbreak) {
        return "<br clear='all' style='page-break-before:" + (pbreak || 'always') + "'>\n";
    },

    tab: function(n_tabs) {
        return "<span style='mso-tab-count:" + (n_tabs || 1) + "'></span>";
    },

    _header_footer: function() {
        // create a div for each header/footer in each section
        var hf_divs = "";
        var i = 1;
        var sections = this.sections;

        for ( var s in sections ) {
            var section = sections[s];
            // deal with headers/footers defined in that section
            
        }

      // my $i = 1;
      // foreach my $section (@{$self->{sections}}) {
     
      //   foreach my $hf (qw/header footer first_header first_footer/) {
      //     $section->{$hf} or next;
      //     (my $style = $hf) =~ s/^first_//;
      //     $hf_divs .= qq{<div style='mso-element:$style' id='$hf$i'>\n}
      //              .  $section->{$hf} . "\n"
      //              .  qq{</div>\n};
      //   }
     
      //   $i += 1;
      // }
     
      // # if at least one such div, need to create an attached file
      // my $header_footer = !$hf_divs ? "" :
      //       qq{<html>\n}
      //     . qq{<head>\n}
      //     . qq{<link id=Main-File rel=Main-File href="../main.htm">\n}
      //     . $self->{hf_head}
      //     . qq{</head>\n}
      //     . qq{<body>\n} . $hf_divs . qq{</body>\n}
      //     . qq{</html>\n};
     
      // return $header_footer;
    },

    _w_xml: function(node) {
        var xml = '';

        for (var key in node) {
            if ( node.hasOwnProperty(key) ) {
                var val = node[key];
                xml += val 
                    ? "<w:" + key + ">"
                      + ( typeof(val) === "string" || typeof(val) === "number" ? val : arguments.callee( val ) )
                      + "<w:" + key + "/>\n"
                    : "<w:" + key + " />\n"; // element without data
            }
        }

        return xml;
    }
};

exports.MsOfficeWordHTMLWriter = MsOfficeWordHTMLWriter;